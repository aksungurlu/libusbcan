cmake_minimum_required( VERSION 2.8.9 )
project( usbcan )
set( CMAKE_BUILD_TYPE Release )
set( CMAKE_SKIP_BUILD_RPATH true )
set( CMAKE_C_STANDARD 99 )

if( ${CMAKE_SYSTEM_NAME} MATCHES "Darwin" )
    set( Platform "MacOS" )
    set( CMAKE_C_FLAGS ${CMAKE_C_FLAGS} "-DOS_UNIX" )
    link_directories( lib/macos ./ )  
elseif( ${CMAKE_SYSTEM_NAME} MATCHES "Linux" )
    set( CMAKE_C_STANDARD gnu99 )
    set( CMAKE_C_FLAGS ${CMAKE_C_FLAGS} "-DOS_UNIX -D_POSIX_C_SOURCES=200809L" )
    if( ${CMAKE_SYSTEM_PROCESSOR} MATCHES "ARM" )
    	set( Platform "RPi" )
	link_directories( /lib/arm-linux-gnueabihf lib/rpi ./ )
	set( PROJECT_LINK_LIBS ${PROJECT_LINK_LIBS} usb )
    else(true)
    	set( Platform "Linux" )
    endif(${CMAKE_SYSTEM_PROCESSOR} MATCHES "ARM")
endif(${CMAKE_SYSTEM_NAME} MATCHES "Darwin")

message( STATUS "Platform is ${Platform}" )
message( STATUS "Compile definitions ${COMPILE_DEFINITIONS}" )

include_directories(include)
set( PROJECT_LINK_LIBS ${PROJECT_LINK_LIBS} Ginkgo_Driver )
set( LIB_SOURCES src/usbcan.c )

add_library( usbcan SHARED ${LIB_SOURCES} )
target_link_libraries( usbcan ${PROJECT_LINK_LIBS} )

set( UTIL_LINK_LIBS ${PROJECT_LINK_LIBS} usbcan )
set( DUMP_SOURCES utils/usbcandump.c )
add_executable( usbcandump ${DUMP_SOURCES} )
target_link_libraries( usbcandump ${UTIL_LINK_LIBS} )
